# Nixpacks configuration for OCR Engine deployment

[phases.setup]
# Include all necessary system packages for OCR, image processing, and OpenCV
nixPkgs = [
    "python310", 
    "gcc", 
    "g++", 
    "git", 
    "wget",
    "pkg-config",
    # OpenCV dependencies
    "opencv",
    "glib",
    "libglvnd",
    "xorg.libSM", 
    "xorg.libXext", 
    "xorg.libXrender",
    "xorg.libICE",
    "xorg.libX11",
    # Additional libraries
    "libgthread-2.0", 
    "libgomp", 
    "libquadmath",
    "zlib",
    "libjpeg",
    "libpng",
    "libtiff",
    "libwebp"
]

[phases.install]
cmds = [
    "pip install --upgrade pip setuptools wheel",
    "pip install -r requirements.txt",
    # Verify installations
    "python -c 'import surya.ocr; print(\"✓ Surya OCR imported successfully\")'",
    "python -c 'import cv2; print(\"✓ OpenCV imported successfully\")'"
]

[phases.build]
cmds = [
    # Create necessary directories
    "mkdir -p /app/.cache/huggingface",
    "mkdir -p /app/.cache/torch",
    "mkdir -p /tmp/surya_ocr_api",
    # Ensure proper permissions
    "chmod -R 777 /tmp/surya_ocr_api",
    # List installed packages for debugging
    "pip list | grep -E '(surya|opencv|transformers|torch)'"
]

[start]
# Set PYTHONPATH to include the app directory for local module imports
cmd = "cd /app && PYTHONPATH=/app python -m uvicorn api.main:app --host 0.0.0.0 --port ${PORT:-8080}"

[variables]
# Python environment
PYTHONUNBUFFERED = "1"
PYTHONPATH = "/app"
# Model caching directories
TRANSFORMERS_CACHE = "/app/.cache/huggingface"
HF_HOME = "/app/.cache/huggingface"
TORCH_HOME = "/app/.cache/torch"
# Hugging Face settings
HF_HUB_DISABLE_SYMLINKS_WARNING = "1"
HF_HUB_OFFLINE = "0"
# OpenCV settings
OPENCV_IO_ENABLE_OPENEXR = "1"